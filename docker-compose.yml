services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: bookingdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d bookingdb -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - dbnet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: 'False'
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
    ports:
      - "8050:80"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - dbnet

  booking-api:
    container_name: backend
    image: hendricoetsee/booking-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9080:9080"
    depends_on:
      - postgres
    networks:
      - dbnet

  booking-ui:
    container_name: frontend
    image: hendricoetsee/booking-ui:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    networks:
      - dbnet

volumes:
  pg_data:
  pgadmin_data:

networks:
  dbnet:
    driver: bridge